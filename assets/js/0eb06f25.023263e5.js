"use strict";(self.webpackChunkgillian_platform_github_io=self.webpackChunkgillian_platform_github_io||[]).push([[984],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>m});var i=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=i.createContext({}),u=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return i.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),p=u(t),m=l,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||a;return t?i.createElement(h,o(o({ref:n},d),{},{components:t})):i.createElement(h,o({ref:n},d))}));function m(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,o=new Array(a);o[0]=p;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r.mdxType="string"==typeof e?e:l,o[1]=r;for(var u=2;u<a;u++)o[u]=t[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2632:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>u});var i=t(7462),l=(t(7294),t(3905));const a={sidebar_position:1},o="Setting up for development",r={unversionedId:"Development/install",id:"Development/install",title:"Setting up for development",description:"This section details how to set up Gillian in order to develop on it. It is useful for:",source:"@site/docs/Development/install.md",sourceDirName:"Development",slug:"/Development/install",permalink:"/docs/Development/install",draft:!1,editUrl:"https://github.com/GillianPlatform/GillianPlatform.github.io/edit/source/docs/Development/install.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/quick-start"},next:{title:"Developing Gillian",permalink:"/docs/Development/develop"}},s={},u=[{value:"What type of installation should I chose ?",id:"what-type-of-installation-should-i-chose-",level:2},{value:"Linux and macOS",id:"linux-and-macos",level:2},{value:"Sandboxing",id:"sandboxing",level:3},{value:"External dependencies",id:"external-dependencies",level:3},{value:"Installing esy",id:"installing-esy",level:4},{value:"Other dependencies",id:"other-dependencies",level:4},{value:"On Linux",id:"on-linux",level:5},{value:"On macOS",id:"on-macos",level:5},{value:"Getting the source code",id:"getting-the-source-code",level:3},{value:"Installing dependencies and building",id:"installing-dependencies-and-building",level:3},{value:"Docker",id:"docker",level:2},{value:"Getting the docker image",id:"getting-the-docker-image",level:3},{value:"Building the image yourself from a specific commit",id:"building-the-image-yourself-from-a-specific-commit",level:4},{value:"Downloading only the docker file",id:"downloading-only-the-docker-file",level:4},{value:"Running the container.",id:"running-the-container",level:3},{value:"What it contains",id:"what-it-contains",level:3},{value:"Testing your setup",id:"testing-your-setup",level:2}],d={toc:u};function c(e){let{components:n,...t}=e;return(0,l.kt)("wrapper",(0,i.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"setting-up-for-development"},"Setting up for development"),(0,l.kt)("p",null,"This section details how to set up Gillian in order to develop on it. It is useful for:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"People evaluating Gillian as a paper artifact"),(0,l.kt)("li",{parentName:"ul"},"People wanting to contribute to the project"),(0,l.kt)("li",{parentName:"ul"},"People generally curious about the project")),(0,l.kt)("p",null,"The Gillian development repository contains :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The GillianCore folder, which is actually the Gillian Library."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../Instantiations/JavaScript/"},"Gillian-JS")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"../Instantiations/C/"},"Gillian-C")),(0,l.kt)("li",{parentName:"ul"},"WISL, a small language for teaching and research.")),(0,l.kt)("h2",{id:"what-type-of-installation-should-i-chose-"},"What type of installation should I chose ?"),(0,l.kt)("p",null,"Gillian ",(0,l.kt)("strong",{parentName:"p"},"should")," work on most Linux and macOS machines, and cannot be installed on Windows machines for now. We do not have a large range of different machines to test it on, so there might also be compatibility issues with some Linux or old versions of macOS. We primarily tested on :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"macOS Catalina - x86_64"),(0,l.kt)("li",{parentName:"ul"},"Ubuntu 18.04.4 LTS - x86_64")),(0,l.kt)("p",null,"If your machine is running Linux or macOS, we encourage you to install the development environment directly on your machine. The installation is safe and will not disrupt your current setup (see ",(0,l.kt)("a",{parentName:"p",href:"#sandboxing"},"sandboxing"),")."),(0,l.kt)("p",null,"If the installation does not work on your machine, or if you are running Windows, please follow the steps for ",(0,l.kt)("a",{parentName:"p",href:"#docker"},"Docker installation")," or download the proposed virtual machine."),(0,l.kt)("h2",{id:"linux-and-macos"},"Linux and macOS"),(0,l.kt)("h3",{id:"sandboxing"},"Sandboxing"),(0,l.kt)("p",null,"We make use of ",(0,l.kt)("a",{parentName:"p",href:"https://esy.sh"},"esy")," for dependency management, which sandboxes the dependencies. Apart from the very few external dependencies (including esy), installing Gillian's dependencies ",(0,l.kt)("strong",{parentName:"p"},"will not")," affect any current environment you have (including your opam switches) and it should therefore be perfectly safe to install the development environment directly on your machine."),(0,l.kt)("h3",{id:"external-dependencies"},"External dependencies"),(0,l.kt)("h4",{id:"installing-esy"},"Installing esy"),(0,l.kt)("p",null,"Esy is installed through NPM. Therefore, one should first ",(0,l.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/package-manager/"},"install NodeJS"),". Our project does not use NodeJS or NPM, but for now, it is the only way to install Esy. If you do not already have NodeJS installed and do not want to install it, please use the ",(0,l.kt)("a",{parentName:"p",href:"#docker"},"Docker installation")," or the Virtual Machine."),(0,l.kt)("p",null,"To install Esy, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g esy\n")),(0,l.kt)("p",null,"Some machines may require sudo rights to install esy globally, in that case, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo npm install -g esy --unsafe-perm\n")),(0,l.kt)("h4",{id:"other-dependencies"},"Other dependencies"),(0,l.kt)("p",null,"The development environment of Gillian requires the machine to have some basic developer tools installed."),(0,l.kt)("h5",{id:"on-linux"},"On Linux"),(0,l.kt)("p",null,"On Debian or Ubuntu, one should run the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get update\nsudo apt-get install curl git build-essential m4\n")),(0,l.kt)("p",null,"On other Linux distributions, please install similar packages using your favourite package manager or from source directly."),(0,l.kt)("h5",{id:"on-macos"},"On macOS"),(0,l.kt)("p",null,"The XCode command line tools should be installed on your machine. If it is not already done, please run the following command and follow the installation instructions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-zsh"},"xcode-select --install\n")),(0,l.kt)("p",null,"Then, make sure that your development tools are up to date."),(0,l.kt)("h3",{id:"getting-the-source-code"},"Getting the source code"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If you are evaluating Gillian as an artifact, please use the source code provided to you as part of the artifact submission.")),(0,l.kt)("p",null,"In your terminal, go into your desired folder and run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/GillianPlatform/Gillian.git Gillian\ncd Gillian\n")),(0,l.kt)("h3",{id:"installing-dependencies-and-building"},"Installing dependencies and building"),(0,l.kt)("p",null,"Thanks to esy, it is extremely simple to build the entire Gillian platform (including Gillian-C and Gillian-JS). In the Gillian folder, simply run :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"esy\n")),(0,l.kt)("p",null,"This may take a while, as it is installing and building sandboxed versions of every dependencies, including OCaml and Z3."),(0,l.kt)("h2",{id:"docker"},"Docker"),(0,l.kt)("p",null,"We explain how to get the docker container up and ready for development inside a docker environment. Note that the docker images are not persistent."),(0,l.kt)("h3",{id:"getting-the-docker-image"},"Getting the docker image"),(0,l.kt)("p",null,"There are two ways of getting the docker image with the development environment : building it yourself or pulling it from the docker hub."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"If you are evaluating Gillian as an artifact, please build the image yourself from the provided repository, or pull the docker image with the tag associated with the artifact.")),(0,l.kt)("h4",{id:"building-the-image-yourself-from-a-specific-commit"},"Building the image yourself from a specific commit"),(0,l.kt)("p",null,"You need git to clone the Gillian repository :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/GillianPlatform/Gillian.git Gillian\ncd Gillian/.docker\n")),(0,l.kt)("p",null,"Then simply build the docker image :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t gillian .\n")),(0,l.kt)("p",null,"This will take a while, because it will install esy, copying the repo and build everything."),(0,l.kt)("h4",{id:"downloading-only-the-docker-file"},"Downloading only the docker file"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl --create-dirs  --output /tmp/GillianDocker/Dockerfile https://raw.githubusercontent.com/GillianPlatform/Gillian/master/.docker/Dockerfile && docker build -t gillian /tmp/GillianDocker\n")),(0,l.kt)("h3",{id:"running-the-container"},"Running the container."),(0,l.kt)("p",null,"Once the image is built, run:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -it gillian\n")),(0,l.kt)("p",null,"This will start the container and give you access through a ",(0,l.kt)("inlineCode",{parentName:"p"},"zsh")," shell."),(0,l.kt)("h3",{id:"what-it-contains"},"What it contains"),(0,l.kt)("p",null,"The docker container contains :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The Gillian repository in ",(0,l.kt)("inlineCode",{parentName:"li"},"/app/Gillian")),(0,l.kt)("li",{parentName:"ul"},"Our fork of ",(0,l.kt)("inlineCode",{parentName:"li"},"Test262")," in ",(0,l.kt)("inlineCode",{parentName:"li"},"/app/test262")),(0,l.kt)("li",{parentName:"ul"},"our fork of ",(0,l.kt)("inlineCode",{parentName:"li"},"Collections-C")," in ",(0,l.kt)("inlineCode",{parentName:"li"},"/app/collections-c"))),(0,l.kt)("h2",{id:"testing-your-setup"},"Testing your setup"),(0,l.kt)("p",null,"Once the project is built on your machine, or once you are inside the docker container, try running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"esy x gillian-js verify Gillian-JS/Examples/JaVerT/BST.js --silent\n")),(0,l.kt)("p",null,"which should yield:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-logs"},"Obtaining specs to verify.\nObtained 5 symbolic tests\nRunning symbolic tests: 0.080211\nVerifying one spec of procedure makeNode... Success\nVerifying one spec of procedure find... Success\nVerifying one spec of procedure findMin... Success\nVerifying one spec of procedure remove... Success\nVerifying one spec of procedure insert... Success\nAll specs succeeded: [Time]\n")),(0,l.kt)("p",null,"You can also try running:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"esy x gillian-c bulk-exec Gillian-C/examples/concrete\n")),(0,l.kt)("p",null,"which should yield"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-logs"},"Registering tests...\nRunning 1 test suite\n PASS  .\n\nTest Suites: 0 failed, 1 passed, 1 total\nTests:       0 failed, 6 passed, 6 total\nTime:        [Time]\n")))}c.isMDXComponent=!0}}]);