"use strict";(self.webpackChunkgillian_platform_github_io=self.webpackChunkgillian_platform_github_io||[]).push([[817],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>m});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var s=r.createContext({}),c=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},p=function(t){var e=c(t.components);return r.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),f=c(n),m=i,d=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return n?r.createElement(d,a(a({ref:e},p),{},{components:n})):r.createElement(d,a({ref:e},p))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=f;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},533:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={},a="Gillian-C",l={unversionedId:"Instantiations/C/README",id:"Instantiations/C/README",title:"Gillian-C",description:"Everything this section is true at the time of artifact submission for PLDI 2020 on 28th February 2020.",source:"@site/docs/Instantiations/C/README.md",sourceDirName:"Instantiations/C",slug:"/Instantiations/C/",permalink:"/docs/Instantiations/C/",draft:!1,editUrl:"https://github.com/GillianPlatform/GillianPlatform.github.io/edit/source/docs/Instantiations/C/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Developing Gillian",permalink:"/docs/Development/develop"},next:{title:"Symbolic Testing",permalink:"/docs/Instantiations/C/stests"}},s={},c=[],p={toc:c};function u(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"gillian-c"},"Gillian-C"),(0,i.kt)("admonition",{type:"important"},(0,i.kt)("p",{parentName:"admonition"},"Everything this section is true at the time of artifact submission for PLDI 2020 on 28th February 2020.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Gillian-C")," is the instantiation of Gillian to the C language. More precisely, ",(0,i.kt)("a",{parentName:"p",href:"http://compcert.inria.fr/"},"CompCert-C"),"). It can be found in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Gillian-C")," folder of the repository."),(0,i.kt)("p",null,"In this section, we start by describing its ",(0,i.kt)("a",{parentName:"p",href:"./structure"},"structure")," and then explain how to write ",(0,i.kt)("a",{parentName:"p",href:"./stests"},"symbolic tests"),"."))}u.isMDXComponent=!0}}]);