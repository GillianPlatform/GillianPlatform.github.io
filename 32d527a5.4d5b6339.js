(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{101:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return j})),a.d(t,"default",(function(){return l}));var n=a(1),r=a(6),b=(a(0),a(119)),c={id:"cosette",title:"Gillian-JS: Symbolic Testing"},i={id:"js/cosette",title:"Gillian-JS: Symbolic Testing",description:"## Writing Symbolic Tests",source:"@site/docs/js/stest.md",permalink:"/docs/js/cosette",editUrl:"https://github.com/GillianPlatform/gillianplatform.github.io/docs/js/stest.md",sidebar:"someSidebar",previous:{title:"JS-2-GIL and Test262",permalink:"/docs/js/js-2-gil"},next:{title:"Gillian-JS: References",permalink:"/docs/js/references"}},j=[{value:"Writing Symbolic Tests",id:"writing-symbolic-tests",children:[{value:"Declaring Symbolic Variables",id:"declaring-symbolic-variables",children:[]},{value:"Assumptions and Assertions",id:"assumptions-and-assertions",children:[]},{value:"Semantics of Operators",id:"semantics-of-operators",children:[]},{value:"Typing and Objects in Symbolic Tests",id:"typing-and-objects-in-symbolic-tests",children:[]}]},{value:"Symbolic Testing of Buckets.js",id:"symbolic-testing-of-bucketsjs",children:[{value:"Testing Results",id:"testing-results",children:[]},{value:"Reproducing the Results",id:"reproducing-the-results",children:[]},{value:"Detailed Per-Folder Breakdown: Buckets.js",id:"detailed-per-folder-breakdown-bucketsjs",children:[]},{value:"Reproducing the Buckets.js Bugs found by [Cosette] and [JaVerT 2.0]",id:"reproducing-the-bucketsjs-bugs-found-by-cosette-and-javert-20",children:[]},{value:"[Cosette] Multi-Dictionary Bug",id:"cosette-multi-dictionary-bug",children:[]},{value:"[JaVerT 2.0] Linked-List Bugs",id:"javert-20-linked-list-bugs",children:[]}]}],O={rightToc:j};function l(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},O,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"writing-symbolic-tests"},"Writing Symbolic Tests"),Object(b.b)("p",null,"The whole-program symbolic testing aspect of Gillian-JS (codenamed Cosette) extends JavaScript with a mechanism for declaring symbolic variables and performing first-order reasoning on them."),Object(b.b)("h3",{id:"declaring-symbolic-variables"},"Declaring Symbolic Variables"),Object(b.b)("p",null,"One can declare untyped symbolic variables, symbolic booleans, symbolic string, and symbolic numbers as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var x = symb(x);        // Untyped symbolic variable\n\nvar b = symb_number(b); // Symbolic boolean\nvar n = symb_number(n); // Symbolic number\nvar s = symb_string(s); // Symbolic string\n")),Object(b.b)("p",null,"The single parameters provided to these functions indicate the name of the created symbol, or ",Object(b.b)("em",{parentName:"p"},"logical variable"),", that Cosette will further use in the reaasoning. Normally, we choose these to coincide with the JavaScript variables in which they are stored so that the outputs of the analysis are more readable."),Object(b.b)("h3",{id:"assumptions-and-assertions"},"Assumptions and Assertions"),Object(b.b)("p",null,"Cosette provides a mechanism for reasoning about the symbols, in the form of assumptions and assertions, as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"Assume(B);  // Assume that the boolean expression B holds\nAssert(B);  // Assert that the boolean expression B holds\n")),Object(b.b)("p",null,"The grammar of boolean expressions (",Object(b.b)("inlineCode",{parentName:"p"},"B"),") and expressions (",Object(b.b)("inlineCode",{parentName:"p"},"E"),") is (approximately) as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-c"}),"B ::=\n  | x                         // (Boolean) variables\n  | E = E                     // Equality\n  | E < E | E <= E            // Comparison\n  | not B | B and B | B or B  // Logical operators\n\nE ::=\n  | c                           // Constants\n  | x                           // Variables\n  | E + E | E - E | ...         // Numeric operators\n  | E ++ E | s-len E | s-nth E  // String concat, length, and n-th\n")),Object(b.b)("p",null,"Here is an example symbolic test using assumptions and assertions:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"// Create two symbolic numbers\nvar n1 = symb_number(n1), n2 = symb_number(n2);\n\n// Assume that they are non-negative and different\nAssume((0 <= n1) and (0 <= n2) and (not (n1 = n2)));\n\n// Perform some calculations\nvar res = f(n1, n2);\n\n// Assert, for example, that n1 and n2 are not greater than the result\nAssert((n1 <= res) and (n2 <= res));\n")),Object(b.b)("p",null,"This example is already in the repository (with ",Object(b.b)("inlineCode",{parentName:"p"},"f")," instantiated to ",Object(b.b)("inlineCode",{parentName:"p"},"n1 + n2"),"), and you can run it, starting from the ",Object(b.b)("inlineCode",{parentName:"p"},"Gillian")," folder, as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"esy\nesy init:env\ncd JaVerT/environment\nesy x gillian-js wpst Examples/Cosette/simple_example.js -s\n")),Object(b.b)("p",null,"Since the assertion in the end does hold, there will be no output from Cosette, meaning that the test has passed. If however, you change ",Object(b.b)("inlineCode",{parentName:"p"},"n1 + n2")," to ",Object(b.b)("inlineCode",{parentName:"p"},"n1 * n2")," and re-run the example, you will be faced with the following error message and counter-model:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"Assert failed with argument ((#n1 <=# (#n1 * #n2)) /\\ (#n2 <=# (#n1 * #n2))).\nFailing Model:\n  [ (#n2: 1), (#n1: 0) ]\n")),Object(b.b)("p",null,"which means that the assertion does not hold if ",Object(b.b)("inlineCode",{parentName:"p"},"n1 = 0")," and ",Object(b.b)("inlineCode",{parentName:"p"},"n2 = 1"),". Here, variables prefixed by ",Object(b.b)("inlineCode",{parentName:"p"},"#")," denote logical variables; in this case, the parameters given to the ",Object(b.b)("inlineCode",{parentName:"p"},"symb_number")," function."),Object(b.b)("h3",{id:"semantics-of-operators"},"Semantics of Operators"),Object(b.b)("p",null,"Importantly, the semantics of all of the operators is deliberately ",Object(b.b)("strong",{parentName:"p"},"NOT")," as in JavaScript. For example, the comparison and numeric operators do not perform any coercions. If you would, for example, like to reason using the JavaScript ",Object(b.b)("inlineCode",{parentName:"p"},"<="),", you can write the following:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var res_leq_n1 = (n1 <= res);\n\nAssert(n1_leq_res);\n")),Object(b.b)("h3",{id:"typing-and-objects-in-symbolic-tests"},"Typing and Objects in Symbolic Tests"),Object(b.b)("p",null,"Since we do not (yet) perform lazy initialisation in symbolic execution, errors may occur if you attempt to reason about symbolic objects or untyped symbolic variables. This can be prevented as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var x = symb(x);\nAssume(not (typeOf x = Obj));\n")),Object(b.b)("p",null,"where ",Object(b.b)("inlineCode",{parentName:"p"},"typeOf")," is the built-in GIL typing operator and ",Object(b.b)("inlineCode",{parentName:"p"},"Obj")," is the built-in GIL object type. In this way, it is guaranteed that ",Object(b.b)("inlineCode",{parentName:"p"},"x")," is not an object (but may still equal ",Object(b.b)("inlineCode",{parentName:"p"},"null"),")."),Object(b.b)("h2",{id:"symbolic-testing-of-bucketsjs"},"Symbolic Testing of Buckets.js"),Object(b.b)("p",null,"We symbolically test Buckets.js, a real-world JavaScript data-structure library, with the goal of obtaining 100% line coverage. The results are presented in the table below, with each row containing:"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"The name of the folder being tested, which also indicates the data structure in question"),Object(b.b)("li",{parentName:"ul"},"The number of tests required for 100% line coverage"),Object(b.b)("li",{parentName:"ul"},"The total number of GIL commands executed during these tests"),Object(b.b)("li",{parentName:"ul"},"The total testing time (in seconds)")),Object(b.b)("h3",{id:"testing-results"},"Testing Results"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Data Structure"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Tests"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"GIL Commands"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Time (s)"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"arrays")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"9"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"330,147"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2.678")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"bag")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"7"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,343,393"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"5.064")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"bstree")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"11"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"3,751,092"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"12.507")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"dictionary")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"7"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"401,575"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.833")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"heap")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,492,204"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"3.411")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"linkedlist")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"9"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"588,714"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4.141")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"multidictionary")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,106,650"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"3.803")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"queue")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"407,106"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2.140")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"priorityqueue")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2,312,226"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4.121")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"set")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2,178,222"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4.458")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"stack")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"306,449"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.625")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Total")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"74")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"14,217,778")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"45.781"))))),Object(b.b)("p",null,"The results are 1.3% slower and the number of executed GIL commands is 0.1% greater than reported in the submitted version---we will update accordingly. The former is due to a minor overhead introduced by the refactoring of the tool, whereas the latter is the effect of (also minor) changes to the symbolic execution engine and the JS-2-GIL compiler."),Object(b.b)("h3",{id:"reproducing-the-results"},"Reproducing the Results"),Object(b.b)("p",null,"Starting from the ",Object(b.b)("inlineCode",{parentName:"p"},"Gillian")," folder, execute the following:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"esy\nesy init:env\ncd Gillian-JS/environment\n")),Object(b.b)("p",null,"Then, to reproduce the results for a specific folder from the first column of the above table, execute the following:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./testCosetteFolder.sh Examples/Cosette/Buckets/[folder]\n")),Object(b.b)("p",null,"In order to obtain the number of executed commands, append the ",Object(b.b)("inlineCode",{parentName:"p"},"count")," parameter to the last command. Therefore, for example, the command to run the tests for the ",Object(b.b)("inlineCode",{parentName:"p"},"queue")," data structure and obtain the number of executed commands is"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./testCosetteFolder.sh Examples/Cosette/Buckets/queue count\n")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Note"),": The times obtained when counting executed commands will be slower, due to the fact that the tests will be run single-threaded."),Object(b.b)("h3",{id:"detailed-per-folder-breakdown-bucketsjs"},"Detailed Per-Folder Breakdown: Buckets.js"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"arrays")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"7"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"8"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"9"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.259"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.288"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.264"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.264"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.259"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.285"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.258"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.569"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.232"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2.678")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"33,903"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"34,675"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"34,896"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"42,866"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"30,483"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"55,210"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"34,765"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"39,532"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"23,817"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"330,147")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"bag")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"7"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.501"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.453"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.963"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.641"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.577"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.923"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.006"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"5.064")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"99,395"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"60,935"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"301,687"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"208,336"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"158,635"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"200,411"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"313,994"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,343,393")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"bstree")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"7"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"8"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"9"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"10"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"11"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.746"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2.540"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.684"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.763"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.015"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.028"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.013"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.131"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.762"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.762"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2.063"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"12.507")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"123,798"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,254,635"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"72,637"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"169,155"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192,683"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192,683"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"191,633"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"390,919"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"100,266"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"177,362"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"885,321"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"3,751,092")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"dictionary")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"7"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.275"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.238"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.217"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.352"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.229"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.217"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.305"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.833")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"61,161"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"54,140"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"44,569"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"55,033"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"55,914"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"41,904"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"88,854"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"401,575")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"heap")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.517"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.487"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.629"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.778"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"3.411")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"135,140"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"804,659"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"169,522"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"382,883"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,492,204")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"linkedlist")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"7"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"8"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"9"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.648"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.577"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.603"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.438"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.293"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.295"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.257"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.718"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.312"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4.141")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"43,209"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"57,458"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"97,728"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"82,345"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"63,645"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"66,093"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"30,794"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"97,225"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"50,217"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"588,714")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"multidictionary")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.504"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.813"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.566"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.579"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.678"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.663"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"3.803")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"130,145"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"312,351"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"166,638"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"145,627"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"158,934"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"192,955"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,106,650")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"queue")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.332"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.345"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.345"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.249"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.403"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.466"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2.140")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"71,514"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"69,962"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"45,067"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"36,767"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"62,624"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"121,172"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"407,106")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"priorityqueue")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.757"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.731"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.449"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.993"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.191"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4.121")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"399,730"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"287,433"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"121,329"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"450,539"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,053,195"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2,312,226")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"set")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"5"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"6"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.386"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.679"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.743"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.622"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.292"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.736"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"4.458")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"78,959"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"242,304"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1,265,278"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"232,776"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"66,700"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"292,205"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"2,178,222")))),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"stack")),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"1"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"2"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"3"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"4"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"th"},"Total")))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"Time (s)")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.343"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.331"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.331"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"0.620"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"1.625")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),Object(b.b)("strong",{parentName:"td"},"GIL Commands")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"52,233"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"44,958"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"55,097"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"154,161"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"306,449")))),Object(b.b)("h3",{id:"reproducing-the-bucketsjs-bugs-found-by-cosette-and-javert-20"},"Reproducing the Buckets.js Bugs found by ",Object(b.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/js/references#cosette-symbolic-execution-for-javascript"}),"[","Cosette","]")," and ",Object(b.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/js/references#javert20-compositional-symbolic-execution-for-javascript"}),"[","JaVerT 2.0","]")),Object(b.b)("p",null,"Starting from the ",Object(b.b)("inlineCode",{parentName:"p"},"Gillian")," folder, execute the following:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"esy\nesy init:env\ncd Gillian-JS/environment\n")),Object(b.b)("h3",{id:"cosette-multi-dictionary-bug"},Object(b.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/js/references#cosette-symbolic-execution-for-javascript"}),"[","Cosette","]")," Multi-Dictionary Bug"),Object(b.b)("p",null,"In order to reproduce the multi-dictionary bug reported by ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/js/references#cosette-symbolic-execution-for-javascript"}),"[","Cosette","]"),", execute:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./testCosette.sh Examples/Cosette/Buckets/multidictionary/bug/multidictionary_bug.js\n")),Object(b.b)("p",null,"You will obtain a failing model"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"Assert failed with argument False.\nFailing Model:\n  [ (#x1: #x2) ]\n")),Object(b.b)("p",null,"The bug is caused by the library wrongly treating the case in which we try to remove a key-value pair for a key with no associated values. The code of the test is as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var dict = new buckets.MultiDictionary()\n\nvar s = symb_string(s);\nvar x1 = symb_number(x1);\nvar x2 = symb_number(x2);\n\ndict.set(s, x1);\ndict.set(s, x2);\n\ndict.remove(s, x1);\nvar res = dict.remove(s, x2);\nAssert(((not (x1 = x2)) and (res = true)) or ((x1 = x2) and (res = false)));\n")),Object(b.b)("p",null,"The test puts two symbolic numbers, ",Object(b.b)("inlineCode",{parentName:"p"},"x1")," and ",Object(b.b)("inlineCode",{parentName:"p"},"x2")," for the same symbolic key ",Object(b.b)("inlineCode",{parentName:"p"},"s")," into an empty multidictionary, then removes ",Object(b.b)("inlineCode",{parentName:"p"},"x1"),", and then removes ",Object(b.b)("inlineCode",{parentName:"p"},"x2")," and registers the value returned by ",Object(b.b)("inlineCode",{parentName:"p"},"remove"),". Then, it asserts that that value was ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if the two keys were different, and ",Object(b.b)("inlineCode",{parentName:"p"},"false")," if the two keys were the same. What the failing model says is that, when the two keys are equal, the library, in fact, throws a native JavaScript error (indicated by the argument ",Object(b.b)("inlineCode",{parentName:"p"},"False")," of the failed assert)."),Object(b.b)("h3",{id:"javert-20-linked-list-bugs"},Object(b.b)("a",Object(n.a)({parentName:"h3"},{href:"/docs/js/references#javert20-compositional-symbolic-execution-for-javascript"}),"[","JaVerT 2.0","]")," Linked-List Bugs"),Object(b.b)("p",null,"In order to reproduce the linked-list bugs reported by ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/js/references#javert20-compositional-symbolic-execution-for-javascript"}),"[","JaVerT 2.0","]"),", execute:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"./testCosette.sh Examples/Cosette/Buckets/linkedlist/bug/linkedlist_bug_1.js\n./testCosette.sh Examples/Cosette/Buckets/linkedlist/bug/linkedlist_bug_2.js\n./testCosette.sh Examples/Cosette/Buckets/linkedlist/bug/linkedlist_bug_3.js\n")),Object(b.b)("p",null,"All of the bugs are causes by the library treating non-integer indexing incorrectly; we explain the bug found by the first test in detail, the remaining two are analogous. For the first test, the failing model is as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{}),"Assert failed with argument\n  ((((#x3 == 0) /\\ (#x2 == #x1)) \\/\n    ((#x3 == 1) /\\ (#x2 == #x2))) \\/\n    (((! (#x3 == 0)) /\\ (! (#x3 == 1))) /\\ (#x2 == undefined))).\nFailing Model:\n  [ (#x2: 4), (#x3: 0.5), (#x1: 3) ]\n")),Object(b.b)("p",null,"The code of the test is as follows:"),Object(b.b)("pre",null,Object(b.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"var list = new buckets.LinkedList()\n\nvar x1 = symb_number(x1);\nvar x2 = symb_number(x2);\nvar x3 = symb_number(x3);\n\nlist.add(x1)\nlist.add(x2)\n\nvar res = list.elementAtIndex(x3);\nAssert( (((x3 = 0) and (res = x1)) or\n         ((x3 = 1) and (res = x2))) or\n         (((not (x3 = 0)) and (not (x3 = 1))) and (res = undefined)) );\n")),Object(b.b)("p",null,"The test inserts two symbolic numbers, ",Object(b.b)("inlineCode",{parentName:"p"},"x1")," and ",Object(b.b)("inlineCode",{parentName:"p"},"x2"),", into an empty linked list, and then indexes the list with a third symbolic number, ",Object(b.b)("inlineCode",{parentName:"p"},"x3"),". The expected outcome is that: if ",Object(b.b)("inlineCode",{parentName:"p"},"x3 = 0"),", the indexing returns ",Object(b.b)("inlineCode",{parentName:"p"},"x1"),"; if ",Object(b.b)("inlineCode",{parentName:"p"},"x3 = 1"),", the indexing returns ",Object(b.b)("inlineCode",{parentName:"p"},"x2"),"; and, otherwise, the indexing returns ",Object(b.b)("inlineCode",{parentName:"p"},"undefined"),". The failing model, however, says that if ",Object(b.b)("inlineCode",{parentName:"p"},"x3 = 0.5"),", the indexing will also return ",Object(b.b)("inlineCode",{parentName:"p"},"x2"),"."))}l.isMDXComponent=!0},119:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return o}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function j(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var O=r.a.createContext({}),l=function(e){var t=r.a.useContext(O),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},m=function(e){var t=l(e.components);return r.a.createElement(O.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},s=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,O=j(e,["components","mdxType","originalType","parentName"]),m=l(a),s=n,o=m["".concat(c,".").concat(s)]||m[s]||p[s]||b;return a?r.a.createElement(o,i({ref:t},O,{components:a})):r.a.createElement(o,i({ref:t},O))}));function o(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,c=new Array(b);c[0]=s;var i={};for(var j in t)hasOwnProperty.call(t,j)&&(i[j]=t[j]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var O=2;O<b;O++)c[O]=a[O];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);