{"header":"<h1>Module <code><span>Bulk.BranchReasoning</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../index.html","kind":"page"},{"name":"Bulk","href":"../index.html","kind":"module"},{"name":"BranchReasoning","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"","content":"<div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-makeFormater\"><a href=\"#val-makeFormater\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> makeFormater : \u000A  <span><span>(<span>string <span class=\"arrow\">&#45;&gt;</span></span> string)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'a</span> <span class=\"arrow\">&#45;&gt;</span></span> unit)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"type-var\">'a</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-branches\"><a href=\"#type-branches\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> branches</span><span> = </span></code><ol><li id=\"type-branches.ExactlyOne\" class=\"def variant constructor anchored\"><a href=\"#type-branches.ExactlyOne\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">ExactlyOne</span></span></code></li><li id=\"type-branches.AllOfThem\" class=\"def variant constructor anchored\"><a href=\"#type-branches.AllOfThem\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">AllOfThem</span></span></code></li><li id=\"type-branches.AtLeastOne\" class=\"def variant constructor anchored\"><a href=\"#type-branches.AtLeastOne\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">AtLeastOne</span></span></code></li></ol></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-build_message_all\"><a href=\"#val-build_message_all\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> build_message_all : \u000A  <span><span class=\"optlabel\">?fmtexp</span>:<span>(<span>string <span class=\"arrow\">&#45;&gt;</span></span> string)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Flag/index.html#type-t\">Gillian.Gil_syntax.Flag.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string * <span class=\"type-var\">'a</span>)</span> option</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>string list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  string</span></code></div><div class=\"spec-doc\"><p>Builds a message explaining the reason of failure when the `AllOfThem` is used. In this case, it explained every case that didn't match the expected patternd</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-oneResInMode\"><a href=\"#val-oneResInMode\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> oneResInMode : \u000A  <span><span class=\"optlabel\">?fmtexp</span>:<span>(<span>string <span class=\"arrow\">&#45;&gt;</span></span> string)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?fmtrcv</span>:<span>(<span>string <span class=\"arrow\">&#45;&gt;</span></span> string)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">pp_what_branch_did</span>:\u000A    <span>(<span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>, <span class=\"type-var\">'c</span>)</span> <a href=\"../../Engine/Exec_res/index.html#type-t\">Engine.Exec_res.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> unit)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Flag/index.html#type-t\">Gillian.Gil_syntax.Flag.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string * <span>(<span><span class=\"type-var\">'b</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'a</span> <span class=\"arrow\">&#45;&gt;</span></span> bool)</span>)</span> option</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>, <span class=\"type-var\">'c</span>)</span> <a href=\"../../Engine/Exec_res/index.html#type-t\">Engine.Exec_res.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool * string</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-resInMode\"><a href=\"#val-resInMode\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> resInMode : \u000A  <span><span class=\"optlabel\">?fmtexp</span>:<span>(<span>string <span class=\"arrow\">&#45;&gt;</span></span> string)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?fmtrcv</span>:<span>(<span>string <span class=\"arrow\">&#45;&gt;</span></span> string)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">pp_what_branch_did</span>:\u000A    <span>(<span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>, <span class=\"type-var\">'c</span>)</span> <a href=\"../../Engine/Exec_res/index.html#type-t\">Engine.Exec_res.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> unit)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-branches\">branches</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Flag/index.html#type-t\">Gillian.Gil_syntax.Flag.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string * <span>(<span><span class=\"type-var\">'b</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'a</span> <span class=\"arrow\">&#45;&gt;</span></span> bool)</span>)</span> option</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>, <span class=\"type-var\">'c</span>)</span> <a href=\"../../Engine/Exec_res/index.html#type-t\">Engine.Exec_res.t</a></span> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>(<span><span class=\"type-var\">'d</span> <span class=\"arrow\">&#45;&gt;</span></span> string)</span> * bool</span></code></div></div>"}