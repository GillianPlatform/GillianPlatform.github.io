{"header":"<h1>Module <code><span>Gil_syntax.BiSpec</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../index.html","kind":"page"},{"name":"Gil_syntax","href":"../index.html","kind":"module"},{"name":"BiSpec","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"<p>Bi-abductive specifications</p>","content":"<div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-t\"><a href=\"#type-t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> t</span><span> = </span><span>{</span></code><ol><li id=\"type-t.bispec_name\" class=\"def record field anchored\"><a href=\"#type-t.bispec_name\" class=\"anchor\"></a><code><span>bispec_name : string;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Procedure/spec name</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.bispec_params\" class=\"def record field anchored\"><a href=\"#type-t.bispec_params\" class=\"anchor\"></a><code><span>bispec_params : <span>string list</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Procedure/spec parameters</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.bispec_pres\" class=\"def record field anchored\"><a href=\"#type-t.bispec_pres\" class=\"anchor\"></a><code><span>bispec_pres : <span><span><a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a> <a href=\"../../Gillian/Utils/Location/index.html#type-located\">Gillian.Utils.Location.located</a></span> list</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Possible preconditions</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.bispec_normalised\" class=\"def record field anchored\"><a href=\"#type-t.bispec_normalised\" class=\"anchor\"></a><code><span>bispec_normalised : bool;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>If the spec is already normalised</p><span class=\"comment-delim\">*)</span></div></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-t_tbl\"><a href=\"#type-t_tbl\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> t_tbl</span><span> = <span><span>(string, <a href=\"#type-t\">t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-init\"><a href=\"#val-init\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> init : \u000A  <span>string <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>string list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span><a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a> <a href=\"../../Gillian/Utils/Location/index.html#type-located\">Gillian.Utils.Location.located</a></span> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"#type-t\">t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-init_tbl\"><a href=\"#val-init_tbl\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> init_tbl : <span>unit <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t_tbl\">t_tbl</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp\"><a href=\"#val-pp\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp : <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div><div class=\"spec-doc\"><p>Pretty-printer</p></div></div>"}