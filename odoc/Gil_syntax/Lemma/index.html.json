{"header":"<h1>Module <code><span>Gil_syntax.Lemma</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../index.html","kind":"page"},{"name":"Gil_syntax","href":"../index.html","kind":"module"},{"name":"Lemma","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"<p>GIL Lemmas</p>","content":"<div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-spec\"><a href=\"#type-spec\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> spec</span><span> = </span><span>{</span></code><ol><li id=\"type-spec.lemma_hyp\" class=\"def record field anchored\"><a href=\"#type-spec.lemma_hyp\" class=\"anchor\"></a><code><span>lemma_hyp : <span><a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a> <a href=\"../../Gillian/Utils/Location/index.html#type-located\">Gillian.Utils.Location.located</a></span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Hypothesis</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-spec.lemma_concs\" class=\"def record field anchored\"><a href=\"#type-spec.lemma_concs\" class=\"anchor\"></a><code><span>lemma_concs : <span><span><a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a> <a href=\"../../Gillian/Utils/Location/index.html#type-located\">Gillian.Utils.Location.located</a></span> list</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Conclusion</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-spec.lemma_spec_variant\" class=\"def record field anchored\"><a href=\"#type-spec.lemma_spec_variant\" class=\"anchor\"></a><code><span>lemma_spec_variant : <span><a href=\"../../Gillian/Gil_syntax/Expr/index.html#type-t\">Gillian.Gil_syntax.Expr.t</a> option</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Variant</p><span class=\"comment-delim\">*)</span></div></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-t\"><a href=\"#type-t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> t</span><span> = </span><span>{</span></code><ol><li id=\"type-t.lemma_name\" class=\"def record field anchored\"><a href=\"#type-t.lemma_name\" class=\"anchor\"></a><code><span>lemma_name : string;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Name</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.lemma_source_path\" class=\"def record field anchored\"><a href=\"#type-t.lemma_source_path\" class=\"anchor\"></a><code><span>lemma_source_path : <span>string option</span>;</span></code></li><li id=\"type-t.lemma_internal\" class=\"def record field anchored\"><a href=\"#type-t.lemma_internal\" class=\"anchor\"></a><code><span>lemma_internal : bool;</span></code></li><li id=\"type-t.lemma_params\" class=\"def record field anchored\"><a href=\"#type-t.lemma_params\" class=\"anchor\"></a><code><span>lemma_params : <span>string list</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Parameters</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.lemma_specs\" class=\"def record field anchored\"><a href=\"#type-t.lemma_specs\" class=\"anchor\"></a><code><span>lemma_specs : <span><a href=\"#type-spec\">spec</a> list</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Specs of the Lemma</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.lemma_proof\" class=\"def record field anchored\"><a href=\"#type-t.lemma_proof\" class=\"anchor\"></a><code><span>lemma_proof : <span><span><a href=\"../../Gillian/Gil_syntax/LCmd/index.html#type-t\">Gillian.Gil_syntax.LCmd.t</a> list</span> option</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>(Optional) Proof</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.lemma_variant\" class=\"def record field anchored\"><a href=\"#type-t.lemma_variant\" class=\"anchor\"></a><code><span>lemma_variant : <span><a href=\"../../Gillian/Gil_syntax/Expr/index.html#type-t\">Gillian.Gil_syntax.Expr.t</a> option</span>;</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Variant</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.lemma_existentials\" class=\"def record field anchored\"><a href=\"#type-t.lemma_existentials\" class=\"anchor\"></a><code><span>lemma_existentials : <span>string list</span>;</span></code></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp\"><a href=\"#val-pp\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp : <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div><div class=\"spec-doc\"><p>Pretty-printer</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-parameter_types\"><a href=\"#val-parameter_types\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> parameter_types : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p>Infers types of parameters and adds them to the contained assertions</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-add_param_bindings\"><a href=\"#val-add_param_bindings\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> add_param_bindings : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p>Adds bindings from parameters to logical variables</p></div></div>"}