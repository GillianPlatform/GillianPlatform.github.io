{"header":"<h1>Module <code><span>Gil_syntax.Proc</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../index.html","kind":"page"},{"name":"Gillian","href":"../../index.html","kind":"module"},{"name":"Gil_syntax","href":"../index.html","kind":"module"},{"name":"Proc","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"<p>Labeled GIL procedures</p><p>Every command is annotated with a label, and the gotos indicate to which label one should jump. Labels can be of any type. However, we say &quot;labeled&quot; when the labels are strings, and &quot;indexed&quot; when the labels are integers. Most functions in Gillian that work with indexed procedures assume for efficiency that the label of the i-th command is always Some i (starting from 0).</p>","content":"<div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-t\"><a href=\"#type-t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>('annot, 'label) t</span></span><span> = </span><span>{</span></code><ol><li id=\"type-t.proc_name\" class=\"def record field anchored\"><a href=\"#type-t.proc_name\" class=\"anchor\"></a><code><span>proc_name : string;</span></code></li><li id=\"type-t.proc_source_path\" class=\"def record field anchored\"><a href=\"#type-t.proc_source_path\" class=\"anchor\"></a><code><span>proc_source_path : <span>string option</span>;</span></code></li><li id=\"type-t.proc_internal\" class=\"def record field anchored\"><a href=\"#type-t.proc_internal\" class=\"anchor\"></a><code><span>proc_internal : bool;</span></code></li><li id=\"type-t.proc_body\" class=\"def record field anchored\"><a href=\"#type-t.proc_body\" class=\"anchor\"></a><code><span>proc_body : <span><span>(<span class=\"type-var\">'annot</span> * <span><span class=\"type-var\">'label</span> option</span> * <span><span class=\"type-var\">'label</span> <a href=\"../Cmd/index.html#type-t\">Cmd.t</a></span>)</span> array</span>;</span></code></li><li id=\"type-t.proc_params\" class=\"def record field anchored\"><a href=\"#type-t.proc_params\" class=\"anchor\"></a><code><span>proc_params : <span>string list</span>;</span></code></li><li id=\"type-t.proc_spec\" class=\"def record field anchored\"><a href=\"#type-t.proc_spec\" class=\"anchor\"></a><code><span>proc_spec : <span><a href=\"../Spec/index.html#type-t\">Spec.t</a> option</span>;</span></code></li><li id=\"type-t.proc_aliases\" class=\"def record field anchored\"><a href=\"#type-t.proc_aliases\" class=\"anchor\"></a><code><span>proc_aliases : <span>string list</span>;</span></code></li><li id=\"type-t.proc_calls\" class=\"def record field anchored\"><a href=\"#type-t.proc_calls\" class=\"anchor\"></a><code><span>proc_calls : <span>string list</span>;</span></code></li><li id=\"type-t.proc_display_name\" class=\"def record field anchored\"><a href=\"#type-t.proc_display_name\" class=\"anchor\"></a><code><span>proc_display_name : <span><span>(string * string)</span> option</span>;</span></code></li><li id=\"type-t.proc_hidden\" class=\"def record field anchored\"><a href=\"#type-t.proc_hidden\" class=\"anchor\"></a><code><span>proc_hidden : bool;</span></code></li></ol><code><span>}</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_yojson\"><a href=\"#val-to_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_yojson : \u000A  <span><span>(<span><span class=\"type-var\">'annot</span> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Yojson</span>.Safe.t)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<span><span class=\"type-var\">'label</span> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Yojson</span>.Safe.t)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'annot</span>, <span class=\"type-var\">'label</span>)</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span class=\"xref-unresolved\">Yojson</span>.Safe.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-of_yojson\"><a href=\"#val-of_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> of_yojson : \u000A  <span><span>(<span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'annot</span> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span>)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'label</span> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span>)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'annot</span>, <span class=\"type-var\">'label</span>)</span> <a href=\"#type-t\">t</a></span> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_params\"><a href=\"#val-get_params\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_params : <span><span><span>(<span class=\"type-var\">'a</span>, <span class=\"type-var\">'b</span>)</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span>string list</span></span></code></div><div class=\"spec-doc\"><p>Gets the parameters of the procedure</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp\"><a href=\"#val-pp\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp : \u000A  <span><span class=\"label\">show_labels</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">pp_label</span>:<span><span class=\"type-var\">'a</span> <span class=\"xref-unresolved\">Fmt</span>.t</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?pp_annot</span>:<span><span class=\"type-var\">'b</span> <span class=\"xref-unresolved\">Fmt</span>.t</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'b</span>, <span class=\"type-var\">'a</span>)</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  unit</span></code></div><div class=\"spec-doc\"><p>If the <code>show_labels</code> flag is true, the labels will be written before the command they correspond to</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp_labeled\"><a href=\"#val-pp_labeled\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp_labeled : \u000A  <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?pp_annot</span>:<span><span class=\"type-var\">'a</span> <span class=\"xref-unresolved\">Fmt</span>.t</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, string)</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  unit</span></code></div><div class=\"spec-doc\"><p>Print labelled</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp_indexed\"><a href=\"#val-pp_indexed\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp_indexed : \u000A  <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?pp_annot</span>:<span><span class=\"type-var\">'a</span> <span class=\"xref-unresolved\">Fmt</span>.t</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  unit</span></code></div><div class=\"spec-doc\"><p>Print indexed</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-indexed_of_labeled\"><a href=\"#val-indexed_of_labeled\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> indexed_of_labeled : <span><span><span>(<span class=\"type-var\">'annot</span>, string)</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span>(<span class=\"type-var\">'annot</span>, int)</span> <a href=\"#type-t\">t</a></span></span></code></div><div class=\"spec-doc\"><p>Returns the indexed procedure for a labeled procedures where the labels can be of any type. Equality of labels is decided by structural equality</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-check_proc_spec_correspondence\"><a href=\"#val-check_proc_spec_correspondence\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> check_proc_spec_correspondence : \u000A  <span><span><span>(string, <span><span>(<span class=\"type-var\">'annot</span>, <span class=\"type-var\">'a</span>)</span> <a href=\"#type-t\">t</a></span>)</span> <a href=\"../../Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  unit</span></code></div></div>"}