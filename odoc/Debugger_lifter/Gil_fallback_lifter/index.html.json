{"header":"<h1>Module <code><span>Debugger_lifter.Gil_fallback_lifter</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../index.html","kind":"page"},{"name":"Debugger_lifter","href":"../index.html","kind":"module"},{"name":"Gil_fallback_lifter","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"<p>A <code>Lifter</code> implementation that acts as a proxy to another lifter (<code>TLLifter</code>), while also keeping a <a href=\"../Gil_lifter/index.html\"><code>Gil_lifter</code></a> updated alongside.</p><p><code>TLLifter</code> can access the GIL lifter and its state via <a href=\"../../Gillian/Debugger/Lifter/Gil_fallback_lifter/module-type-Gil_lifter_with_state/index.html\"><code>Gil_lifter_with_state</code></a>.</p><p>Note that if the GIL lifter gives anything other than <code>Stop</code> when handling a command, it is considered skipped, and <code>TLLifter</code> won't be asked to handle it.</p>","content":"<div class=\"odoc-spec\"><div class=\"spec module-type anchored\" id=\"module-type-Gil_lifter_with_state\"><a href=\"#module-type-Gil_lifter_with_state\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> <span class=\"keyword\">type</span> Gil_lifter_with_state</span><span> =\u000A  <a href=\"../../Gillian/Debugger/Lifter/Gil_fallback_lifter/module-type-Gil_lifter_with_state/index.html\">Gillian.Debugger.Lifter.Gil_fallback_lifter.Gil_lifter_with_state</a></span></code></div><div class=\"spec-doc\"><p>A <a href=\"../Gil_lifter/index.html\"><code>Gil_lifter</code></a>, along with a function to get its state</p></div></div><div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-Make\"><a href=\"#module-Make\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> Make</span><span> = <a href=\"../../Gillian/Debugger/Lifter/Gil_fallback_lifter/Make/index.html\">Gillian.Debugger.Lifter.Gil_fallback_lifter.Make</a></span></code></div></div>"}