{"header":"<h1>Module <code><span>FO_logic.FOSolver</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../../index.html","kind":"page"},{"name":"Gillian","href":"../../../index.html","kind":"module"},{"name":"Symbolic","href":"../../index.html","kind":"module"},{"name":"FO_logic","href":"../index.html","kind":"module"},{"name":"FOSolver","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"","content":"<div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-check_satisfiability_with_model\"><a href=\"#val-check_satisfiability_with_model\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> check_satisfiability_with_model : \u000A  <span><span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Subst/index.html#type-t\">Symbolic.Subst.t</a> option</span></span></code></div><div class=\"spec-doc\"><p><code>check_satisfiability_with_model pfs gamma</code> checks whether or not the pure formulae <code>pfs</code> are satisfiable under the typing environment <code>gamma</code>. If this is the case, the function returns the appropriate logical environment.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-check_satisfiability\"><a href=\"#val-check_satisfiability\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> check_satisfiability : \u000A  <span><span class=\"optlabel\">?matching</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?time</span>:string <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?relevant_info</span>:\u000A    <span>(<a href=\"../../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a> * <a href=\"../../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a> * <a href=\"../../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a>)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool</span></code></div><div class=\"spec-doc\"><p><code>check_satisfiability ?matching pfs gamma</code> checks whether or not the pure formulae <code>pfs</code> are satisfiable under the typing environment <code>gamma</code>. The <code>matching</code> flag should not be used by Gillian instantiation developers.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-sat\"><a href=\"#val-sat\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> sat : \u000A  <span><span class=\"label\">matching</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool</span></code></div><div class=\"spec-doc\"><p>A different API for <code>check_satisfiability</code> better adapted for usage in memory models</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-check_entailment\"><a href=\"#val-check_entailment\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> check_entailment : \u000A  <span><span class=\"optlabel\">?matching</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool</span></code></div><div class=\"spec-doc\"><p><code>check_entailment existentials lpfs rpfs gamma</code> checks whether or not the entailment &lt;&lt; âˆƒ <code>existentials</code>. <code>lpfs</code> =&gt; <code>rpfs</code> &gt;&gt; holds under the typing environment <code>gamma</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-is_equal\"><a href=\"#val-is_equal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> is_equal : \u000A  <span><span class=\"optlabel\">?matching</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool</span></code></div><div class=\"spec-doc\"><p><code>is_equal e1 e2 pfs gamma</code> checks whether or not &lt;&lt; pfs, gamma |- e1 = e2 &gt;&gt;.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-is_different\"><a href=\"#val-is_different\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> is_different : \u000A  <span><span class=\"label\">pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool</span></code></div><div class=\"spec-doc\"><p><code>is_different e1 e2 pfs gamma</code> checks whether or not &lt;&lt; pfs, gamma |- e1 &lt;&gt; e2 &gt;&gt;.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-num_is_less_or_equal\"><a href=\"#val-num_is_less_or_equal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> num_is_less_or_equal : \u000A  <span><span class=\"label\">pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-resolve_loc_name\"><a href=\"#val-resolve_loc_name\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> resolve_loc_name : \u000A  <span><span class=\"label\">pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"label\">gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>string option</span></span></code></div></div>"}