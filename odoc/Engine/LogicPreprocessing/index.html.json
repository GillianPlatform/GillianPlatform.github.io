{"header":"<h1>Module <code><span>Engine.LogicPreprocessing</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../index.html","kind":"page"},{"name":"Engine","href":"../index.html","kind":"module"},{"name":"LogicPreprocessing","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"","content":"<div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-L\"><a href=\"#module-L\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> L</span><span> = <a href=\"../../Logging/index.html\">Logging</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfolded_preds\"><a href=\"#val-unfolded_preds\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfolded_preds : \u000A  <span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-auto_unfold\"><a href=\"#val-auto_unfold\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> auto_unfold : \u000A  <span><span class=\"optlabel\">?unfold_rec_predicates</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?loc</span>:<a href=\"../../Utils/Location/index.html#type-t\">Utils.Location.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a> list</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-find_recursive_preds\"><a href=\"#val-find_recursive_preds\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> find_recursive_preds : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-simplify_and_prune\"><a href=\"#val-simplify_and_prune\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> simplify_and_prune : <span><a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-find_pure_preds\"><a href=\"#val-find_pure_preds\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> find_pure_preds : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_preds\"><a href=\"#val-unfold_preds\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_preds : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span>\u000A  * <span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_spec\"><a href=\"#val-unfold_spec\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_spec : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Spec/index.html#type-t\">Gillian.Gil_syntax.Spec.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"../../Gillian/Gil_syntax/Spec/index.html#type-t\">Gillian.Gil_syntax.Spec.t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_lemma\"><a href=\"#val-unfold_lemma\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_lemma : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Lemma/index.html#type-t\">Gillian.Gil_syntax.Lemma.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"../../Gillian/Gil_syntax/Lemma/index.html#type-t\">Gillian.Gil_syntax.Lemma.t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_bispec\"><a href=\"#val-unfold_bispec\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_bispec : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/BiSpec/index.html#type-t\">Gillian.Gil_syntax.BiSpec.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"../../Gillian/Gil_syntax/BiSpec/index.html#type-t\">Gillian.Gil_syntax.BiSpec.t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-remove_equalities_between_binders_and_lvars\"><a href=\"#val-remove_equalities_between_binders_and_lvars\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> remove_equalities_between_binders_and_lvars : \u000A  <span><span><span class=\"xref-unresolved\">Stdlib</span>.String.t list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"../../Gillian/Gil_syntax/Asrt/index.html#type-t\">Gillian.Gil_syntax.Asrt.t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_cmd\"><a href=\"#val-unfold_cmd\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_cmd : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>int <a href=\"../../Gillian/Gil_syntax/Cmd/index.html#type-t\">Gillian.Gil_syntax.Cmd.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>int <a href=\"../../Gillian/Gil_syntax/Cmd/index.html#type-t\">Gillian.Gil_syntax.Cmd.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_proc\"><a href=\"#val-unfold_proc\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_proc : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Proc/index.html#type-t\">Gillian.Gil_syntax.Proc.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Proc/index.html#type-t\">Gillian.Gil_syntax.Proc.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-explicit_param_types\"><a href=\"#val-explicit_param_types\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> explicit_param_types : \u000A  <span><span><span>(string, <span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Proc/index.html#type-t\">Gillian.Gil_syntax.Proc.t</a></span>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Lemma/index.html#type-t\">Gillian.Gil_syntax.Lemma.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, <span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Proc/index.html#type-t\">Gillian.Gil_syntax.Proc.t</a></span>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span>\u000A  * <span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span>\u000A  * <span><span>(string, <a href=\"../../Gillian/Gil_syntax/Lemma/index.html#type-t\">Gillian.Gil_syntax.Lemma.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_procs\"><a href=\"#val-unfold_procs\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_procs : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, <span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Proc/index.html#type-t\">Gillian.Gil_syntax.Proc.t</a></span>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, <span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Proc/index.html#type-t\">Gillian.Gil_syntax.Proc.t</a></span>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_specs\"><a href=\"#val-unfold_specs\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_specs : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Spec/index.html#type-t\">Gillian.Gil_syntax.Spec.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, <a href=\"../../Gillian/Gil_syntax/Spec/index.html#type-t\">Gillian.Gil_syntax.Spec.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_lemmas\"><a href=\"#val-unfold_lemmas\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_lemmas : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Lemma/index.html#type-t\">Gillian.Gil_syntax.Lemma.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, <a href=\"../../Gillian/Gil_syntax/Lemma/index.html#type-t\">Gillian.Gil_syntax.Lemma.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-unfold_bispecs\"><a href=\"#val-unfold_bispecs\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> unfold_bispecs : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, bool)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/BiSpec/index.html#type-t\">Gillian.Gil_syntax.BiSpec.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(string, <a href=\"../../Gillian/Gil_syntax/BiSpec/index.html#type-t\">Gillian.Gil_syntax.BiSpec.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-add_closing_tokens\"><a href=\"#val-add_closing_tokens\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> add_closing_tokens : \u000A  <span><span><span>(string, <a href=\"../../Gillian/Gil_syntax/Pred/index.html#type-t\">Gillian.Gil_syntax.Pred.t</a>)</span> <a href=\"../../Gillian/Utils/Prelude/Hashtbl/index.html#type-t\">Utils.Prelude.Hashtbl.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-preprocess\"><a href=\"#val-preprocess\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> preprocess : \u000A  <span><span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Prog/index.html#type-t\">Gillian.Gil_syntax.Prog.t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<span class=\"type-var\">'a</span>, int)</span> <a href=\"../../Gillian/Gil_syntax/Prog/index.html#type-t\">Gillian.Gil_syntax.Prog.t</a></span></span></code></div></div>"}