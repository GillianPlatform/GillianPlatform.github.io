{"header":"<h1>Module <code><span>Make.SAInterpreter</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../../index.html","kind":"page"},{"name":"Engine","href":"../../../index.html","kind":"module"},{"name":"Verifier","href":"../../index.html","kind":"module"},{"name":"Make","href":"../index.html","kind":"module"},{"name":"SAInterpreter","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"","content":"<div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-Call_stack\"><a href=\"#module-Call_stack\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> <a href=\"Call_stack/index.html\">Call_stack</a></span><span> : <a href=\"../../../../Gillian/General/Call_stack/module-type-S/index.html\">Gillian.General.Call_stack.S</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-vt\"><a href=\"#type-vt\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> vt</span><span> = <a href=\"../../../../Gillian/Symbolic/Values/index.html#type-t\">Gillian.Symbolic.Values.t</a></span></code></div><div class=\"spec-doc\"><p>Value type</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-st\"><a href=\"#type-st\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> st</span><span> = <a href=\"../../../../Gillian/Symbolic/Subst/index.html#type-t\">Gillian.Symbolic.Subst.t</a></span></code></div><div class=\"spec-doc\"><p>Subst type</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-store_t\"><a href=\"#type-store_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> store_t</span><span> = <a href=\"../../../SStore/index.html#type-t\">SStore.t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-state_t\"><a href=\"#type-state_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> state_t</span><span> = <a href=\"../index.html#type-state\">state</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-state_err_t\"><a href=\"#type-state_err_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> state_err_t</span><span> = <a href=\"../argument-2-SPState/index.html#type-err_t\">SPState.err_t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp_state_err_t\"><a href=\"#val-pp_state_err_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp_state_err_t : \u000A  <span><span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-state_err_t\">state_err_t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-show_state_err_t\"><a href=\"#val-show_state_err_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> show_state_err_t : <span><a href=\"#type-state_err_t\">state_err_t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.string</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-state_vt\"><a href=\"#type-state_vt\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> state_vt</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-state_vt_to_yojson\"><a href=\"#val-state_vt_to_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> state_vt_to_yojson : <span><a href=\"#type-state_vt\">state_vt</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Yojson</span>.Safe.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-state_vt_of_yojson\"><a href=\"#val-state_vt_of_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> state_vt_of_yojson : \u000A  <span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-state_vt\">state_vt</a> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp_state_vt\"><a href=\"#val-pp_state_vt\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp_state_vt : \u000A  <span><span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-state_vt\">state_vt</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-show_state_vt\"><a href=\"#val-show_state_vt\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> show_state_vt : <span><a href=\"#type-state_vt\">state_vt</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.string</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-heap_t\"><a href=\"#type-heap_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> heap_t</span><span> = <a href=\"../index.html#type-heap_t\">heap_t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-init_data\"><a href=\"#type-init_data\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> init_data</span></code></div><div class=\"spec-doc\"><p>Data necessary to initialize the state; language-dependent</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-annot\"><a href=\"#type-annot\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> annot</span><span> = <a href=\"../index.html#type-annot\">annot</a></span></code></div><div class=\"spec-doc\"><p>Command annotation; language-dependent</p></div></div><div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-Val\"><a href=\"#module-Val\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> <a href=\"Val/index.html\">Val</a></span><span> : <a href=\"../../../../Gillian/General/Val/module-type-S/index.html\">Gillian.General.Val.S</a> <span class=\"keyword\">with</span> <span><span class=\"keyword\">type</span> <a href=\"../../../../Gillian/General/Val/module-type-S/index.html#type-t\">t</a> = <a href=\"#type-vt\">vt</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-Store\"><a href=\"#module-Store\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> <a href=\"Store/index.html\">Store</a></span><span> : <a href=\"../../../../Gillian/General/Store/module-type-S/index.html\">Gillian.General.Store.S</a> <span class=\"keyword\">with</span> <span><span class=\"keyword\">type</span> <a href=\"../../../../Gillian/General/Store/module-type-S/index.html#type-t\">t</a> = <a href=\"#type-store_t\">store_t</a></span> <span class=\"keyword\">and</span> <span><span class=\"keyword\">type</span> <a href=\"../../../../Gillian/General/Store/module-type-S/index.html#type-vt\">vt</a> = <a href=\"#type-vt\">vt</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-invariant_frames\"><a href=\"#type-invariant_frames\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> invariant_frames</span><span> = <span><span>(string * <a href=\"#type-state_t\">state_t</a>)</span> list</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-err_t\"><a href=\"#type-err_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> err_t</span><span> = <span><span>(<a href=\"#type-vt\">vt</a>, <a href=\"#type-state_err_t\">state_err_t</a>)</span> <a href=\"../../../../Gillian/General/Exec_err/index.html#type-t\">Gillian.General.Exec_err.t</a></span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp_err_t\"><a href=\"#val-pp_err_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp_err_t : \u000A  <span><span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-err_t\">err_t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-show_err_t\"><a href=\"#val-show_err_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> show_err_t : <span><a href=\"#type-err_t\">err_t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.string</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-err_t_to_yojson\"><a href=\"#val-err_t_to_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> err_t_to_yojson : <span><a href=\"#type-err_t\">err_t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Yojson</span>.Safe.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-err_t_of_yojson\"><a href=\"#val-err_t_of_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> err_t_of_yojson : \u000A  <span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-err_t\">err_t</a> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-CConf\"><a href=\"#module-CConf\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> <a href=\"CConf/index.html\">CConf</a></span><span> : <span class=\"keyword\">sig</span> ... <span class=\"keyword\">end</span></span></code></div><div class=\"spec-doc\"><p>Type of configurations: state, call stack, previous index, previous loop ids, current index, branching</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-conf_t\"><a href=\"#type-conf_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> conf_t</span><span> = </span></code><ol><li id=\"type-conf_t.BConfErr\" class=\"def variant constructor anchored\"><a href=\"#type-conf_t.BConfErr\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">BConfErr</span> <span class=\"keyword\">of</span> <span><a href=\"#type-err_t\">err_t</a> list</span></span></code></li><li id=\"type-conf_t.BConfCont\" class=\"def variant constructor anchored\"><a href=\"#type-conf_t.BConfCont\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">BConfCont</span> <span class=\"keyword\">of</span> <a href=\"#type-state_t\">state_t</a></span></code></li></ol></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-result_t\"><a href=\"#type-result_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> result_t</span><span> = <span><span>(<a href=\"#type-state_t\">state_t</a>, <a href=\"#type-state_vt\">state_vt</a>, <a href=\"#type-err_t\">err_t</a>)</span> <a href=\"../../../Exec_res/index.html#type-t\">Exec_res.t</a></span></span></code></div><div class=\"spec-doc\"><p>The result of execution</p><p>In the symbolic case, this is the result of <i>one branch</i> of execution</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-conf_selector\"><a href=\"#type-conf_selector\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> conf_selector</span><span> = </span></code><ol><li id=\"type-conf_selector.Path\" class=\"def variant constructor anchored\"><a href=\"#type-conf_selector.Path\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Path</span> <span class=\"keyword\">of</span> <a href=\"../../../../Gillian/Gil_syntax/Branch_case/index.html#type-path\">Gillian.Gil_syntax.Branch_case.path</a></span></code></li><li id=\"type-conf_selector.IdCase\" class=\"def variant constructor anchored\"><a href=\"#type-conf_selector.IdCase\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">IdCase</span> <span class=\"keyword\">of</span> <a href=\"../../../../Gillian/Logging/Report_id/index.html#type-t\">Gillian.Logging.Report_id.t</a> * <span><a href=\"../../../../Gillian/Gil_syntax/Branch_case/index.html#type-t\">Gillian.Gil_syntax.Branch_case.t</a> option</span></span></code></li></ol></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-cont_func_f\"><a href=\"#type-cont_func_f\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>'result cont_func_f</span></span><span> = <span><span class=\"optlabel\">?selector</span>:<a href=\"#type-conf_selector\">conf_selector</a> <span class=\"arrow\">&#45;&gt;</span></span> <span>unit <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'result</span> <a href=\"#type-cont_func\">cont_func</a></span></span></code></div><div class=\"spec-doc\"><p>To support the step-by-step behaviour of the debugger, execution is split into thunks; each invocation executes one GIL command. By supplying a branch path, or an ID and branch case, a particular branch of execution can be selected.</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-cont_func\"><a href=\"#type-cont_func\" class=\"anchor\"></a><code><span><span class=\"keyword\">and</span> <span>'result cont_func</span></span><span> = </span></code><ol><li id=\"type-cont_func.Finished\" class=\"def variant constructor anchored\"><a href=\"#type-cont_func.Finished\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Finished</span> <span class=\"keyword\">of</span> <span><span class=\"type-var\">'result</span> list</span></span></code></li><li id=\"type-cont_func.Continue\" class=\"def variant constructor anchored\"><a href=\"#type-cont_func.Continue\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Continue</span> <span class=\"keyword\">of</span> </span><span>{</span></code><ol><li id=\"type-cont_func.report_id\" class=\"def record field anchored\"><a href=\"#type-cont_func.report_id\" class=\"anchor\"></a><code><span>report_id : <span><a href=\"../../../../Gillian/Logging/Report_id/index.html#type-t\">Gillian.Logging.Report_id.t</a> option</span>;</span></code></li><li id=\"type-cont_func.branch_path\" class=\"def record field anchored\"><a href=\"#type-cont_func.branch_path\" class=\"anchor\"></a><code><span>branch_path : <a href=\"../../../../Gillian/Gil_syntax/Branch_case/index.html#type-path\">Gillian.Gil_syntax.Branch_case.path</a>;</span></code></li><li id=\"type-cont_func.new_branch_cases\" class=\"def record field anchored\"><a href=\"#type-cont_func.new_branch_cases\" class=\"anchor\"></a><code><span>new_branch_cases : <span><a href=\"../../../../Gillian/Gil_syntax/Branch_case/index.html#type-t\">Gillian.Gil_syntax.Branch_case.t</a> list</span>;</span></code></li><li id=\"type-cont_func.cont_func\" class=\"def record field anchored\"><a href=\"#type-cont_func.cont_func\" class=\"anchor\"></a><code><span>cont_func : <span><span class=\"type-var\">'result</span> <a href=\"#type-cont_func_f\">cont_func_f</a></span>;</span></code></li></ol><code><span>}</span></code></li><li id=\"type-cont_func.EndOfBranch\" class=\"def variant constructor anchored\"><a href=\"#type-cont_func.EndOfBranch\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">EndOfBranch</span> <span class=\"keyword\">of</span> <span class=\"type-var\">'result</span> * <span><span class=\"type-var\">'result</span> <a href=\"#type-cont_func_f\">cont_func_f</a></span></span></code></li></ol></div></div><div class=\"odoc-spec\"><div class=\"spec module anchored\" id=\"module-Logging\"><a href=\"#module-Logging\" class=\"anchor\"></a><code><span><span class=\"keyword\">module</span> <a href=\"Logging/index.html\">Logging</a></span><span> : <span class=\"keyword\">sig</span> ... <span class=\"keyword\">end</span></span></code></div><div class=\"spec-doc\"><p>Types and functions for logging to the database</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-call_graph\"><a href=\"#val-call_graph\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> call_graph : <a href=\"../../../../Gillian/Utils/Call_graph/index.html#type-t\">Gillian.Utils.Call_graph.t</a></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-reset_call_graph\"><a href=\"#val-reset_call_graph\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> reset_call_graph : <span>unit <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-evaluate_lcmds\"><a href=\"#val-evaluate_lcmds\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> evaluate_lcmds : \u000A  <span><span><a href=\"#type-annot\">annot</a> <a href=\"../../../MP/index.html#type-prog\">MP.prog</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><a href=\"../../../../Gillian/Gil_syntax/LCmd/index.html#type-t\">Gillian.Gil_syntax.LCmd.t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?annot</span>:<span><a href=\"#type-annot\">annot</a> option</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-state_t\">state_t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<a href=\"#type-state_t\">state_t</a>, <a href=\"#type-state_err_t\">state_err_t</a>)</span> <a href=\"../../../Res_list/index.html#type-t\">Res_list.t</a></span></span></code></div><div class=\"spec-doc\"><p>Evaluates a list of logical commands, in the context of a given state</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-init_evaluate_proc\"><a href=\"#val-init_evaluate_proc\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> init_evaluate_proc : \u000A  <span><span>(<span><a href=\"#type-result_t\">result_t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"type-var\">'a</span>)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><a href=\"#type-annot\">annot</a> <a href=\"../../../MP/index.html#type-prog\">MP.prog</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>string <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>string list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-state_t\">state_t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"type-var\">'a</span> <a href=\"#type-cont_func\">cont_func</a></span></span></code></div><div class=\"spec-doc\"><p>Begins execution of a proc, given parameters and initial state</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-evaluate_proc\"><a href=\"#val-evaluate_proc\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> evaluate_proc : \u000A  <span><span>(<span><a href=\"#type-result_t\">result_t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"type-var\">'a</span>)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><a href=\"#type-annot\">annot</a> <a href=\"../../../MP/index.html#type-prog\">MP.prog</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>string <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>string list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"#type-state_t\">state_t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"type-var\">'a</span> list</span></span></code></div><div class=\"spec-doc\"><p>As with <a href=\"#val-init_evaluate_proc\"><code>init_evaluate_proc</code></a>, but immediately executes the proc to completion</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-check_leaks\"><a href=\"#val-check_leaks\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> check_leaks : <span><a href=\"#type-result_t\">result_t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-result_t\">result_t</a></span></code></div></div>"}