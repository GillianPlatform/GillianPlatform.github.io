{"header":"<h1>Module <code><span>Logging.Log_queryer</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../index.html","kind":"page"},{"name":"Gillian","href":"../../index.html","kind":"module"},{"name":"Logging","href":"../index.html","kind":"module"},{"name":"Log_queryer","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"<p>Module for querying the reports stored by the database reporter. Queries will return None if the Log_queryer is not enabled.</p>","content":"<div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_report\"><a href=\"#val-get_report\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_report : <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><span>(string * string)</span> option</span></span></code></div><div class=\"spec-doc\"><p>Gets content and type (in that order) of the given ID</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_previous_report_id\"><a href=\"#val-get_previous_report_id\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_previous_report_id : <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> option</span></span></code></div><div class=\"spec-doc\"><p>Gets the ID of the report that precedes the given ID</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_next_reports\"><a href=\"#val-get_next_reports\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_next_reports : \u000A  <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> * string * string)</span> list</span></span></code></div><div class=\"spec-doc\"><p>Gets the ID, content and type (in that order) of all reports that directly succeed the given ID</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_next_report_ids\"><a href=\"#val-get_next_report_ids\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_next_report_ids : <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> list</span></span></code></div><div class=\"spec-doc\"><p>As with <a href=\"#val-get_next_reports\"><code>get_next_reports</code></a>, but only gives IDs</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_next_report_id\"><a href=\"#val-get_next_report_id\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_next_report_id : <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> option</span></span></code></div><div class=\"spec-doc\"><p>Gets the ID of the &quot;first&quot; report that succeeds the given ID</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_previously_freed_annot\"><a href=\"#val-get_previously_freed_annot\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_previously_freed_annot : <span>string <span class=\"arrow\">&#45;&gt;</span></span> <span>string option</span></span></code></div><div class=\"spec-doc\"><p>Gets the annotation corresponding to the previous set-freed action for a given location in the current phase, if it exists</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_children_of\"><a href=\"#val-get_children_of\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_children_of : \u000A  <span><span class=\"optlabel\">?roots_only</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> * string * string)</span> list</span></span></code></div><div class=\"spec-doc\"><p>Gets the ID, type, and content (in that order) of any children of the given ID</p><p>If <code>roots_only</code> is true, only gets children with no previous; defaults to <code>false</code></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_cmd_results\"><a href=\"#val-get_cmd_results\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_cmd_results : \u000A  <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> * string)</span> list</span></span></code></div><div class=\"spec-doc\"><p>Gets the ID and content of any children of the given ID with type <code>&quot;cmd_result&quot;</code></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_match_for\"><a href=\"#val-get_match_for\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_match_for : \u000A  <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> * string)</span> option</span></span></code></div><div class=\"spec-doc\"><p>Gets the ID and content of a child, with type <code>&quot;match&quot;</code>, of the given ID (if it exists)</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_match_results\"><a href=\"#val-get_match_results\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_match_results : \u000A  <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> * string)</span> list</span></span></code></div><div class=\"spec-doc\"><p>Returns the ID and content of all children of the given ID with type <code>&quot;match_result&quot;</code></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-resolve_command_and_matches\"><a href=\"#val-resolve_command_and_matches\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> resolve_command_and_matches : \u000A  <span><a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> * <span><span>(<a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a> * <a href=\"../Report_id/index.html#type-t\">Logging.Report_id.t</a>)</span> list</span></span></code></div><div class=\"spec-doc\"><p>Given an ID for an assertion, traverses parents until a command is encountered. Returns the command ID, and a list of pairs of assertion ID and respective match ID</p></div></div>"}