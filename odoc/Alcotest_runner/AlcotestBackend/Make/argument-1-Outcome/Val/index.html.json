{"header":"<h1>Module <code><span>Outcome.Val</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../../../index.html","kind":"page"},{"name":"Alcotest_runner","href":"../../../../index.html","kind":"module"},{"name":"AlcotestBackend","href":"../../../index.html","kind":"module"},{"name":"Make","href":"../../index.html","kind":"module"},{"name":"Outcome","href":"../index.html","kind":"argument-1"},{"name":"Val","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"","content":"<div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-t\"><a href=\"#type-t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> t</span></code></div><div class=\"spec-doc\"><p>Type of GIL values</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_yojson\"><a href=\"#val-to_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_yojson : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Yojson</span>.Safe.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-of_yojson\"><a href=\"#val-of_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> of_yojson : <span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-st\"><a href=\"#type-st\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> st</span></code></div><div class=\"spec-doc\"><p>Type of substitutions for GIL values</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-et\"><a href=\"#type-et\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> et</span></code></div><div class=\"spec-doc\"><p>Type of extended substitutions for GIL values</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-equal\"><a href=\"#val-equal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> equal : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp\"><a href=\"#val-pp\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp : <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div><div class=\"spec-doc\"><p>Printer</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-full_pp\"><a href=\"#val-full_pp\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> full_pp : <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-full_pp_list\"><a href=\"#val-full_pp_list\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> full_pp_list : <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><span><a href=\"#type-t\">t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_literal\"><a href=\"#val-to_literal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_literal : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"../../../../../Gillian/Gil_syntax/Literal/index.html#type-t\">Gillian.Gil_syntax.Literal.t</a> option</span></span></code></div><div class=\"spec-doc\"><p>Convert a value to a literal, if possible</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-from_literal\"><a href=\"#val-from_literal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> from_literal : <span><a href=\"../../../../../Gillian/Gil_syntax/Literal/index.html#type-t\">Gillian.Gil_syntax.Literal.t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p>Convert a literal to a value, always possible</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_expr\"><a href=\"#val-to_expr\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_expr : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"../../../../../Gillian/Gil_syntax/Expr/index.html#type-t\">Gillian.Gil_syntax.Expr.t</a></span></code></div><div class=\"spec-doc\"><p>Convert a value to a logical expression, always possible</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-from_expr\"><a href=\"#val-from_expr\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> from_expr : <span><a href=\"../../../../../Gillian/Gil_syntax/Expr/index.html#type-t\">Gillian.Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><a href=\"#type-t\">t</a> option</span></span></code></div><div class=\"spec-doc\"><p>Converts a logical expression to a value, if possible</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-from_list\"><a href=\"#val-from_list\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> from_list : <span><span><a href=\"#type-t\">t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p>Convert a list of values to a single value, always possible</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-from_lvar_name\"><a href=\"#val-from_lvar_name\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> from_lvar_name : <span>string <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"#type-t\">t</a></span></code></div><div class=\"spec-doc\"><p>Converts a logical variable name into a value</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_list\"><a href=\"#val-to_list\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_list : <span><a href=\"#type-t\">t</a> <span class=\"arrow\">&#45;&gt;</span></span> <span><span><a href=\"#type-t\">t</a> list</span> option</span></span></code></div><div class=\"spec-doc\"><p>Convert a value to a list of values, if possible</p></div></div>"}