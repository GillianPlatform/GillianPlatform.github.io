{"header":"<h1>Module <code><span>Utils.Arith_utils</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../index.html","kind":"page"},{"name":"Gillian","href":"../../index.html","kind":"module"},{"name":"Utils","href":"../index.html","kind":"module"},{"name":"Arith_utils","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"<p>Utility functions for floating point arithmetic</p>","content":"<div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-is_int\"><a href=\"#val-is_int\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> is_int : <span>float <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p>Checks if a float is an integer</p><p>Note that <code>-0</code> is <b>not</b> considered an integer</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-is_normal\"><a href=\"#val-is_normal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> is_normal : <span>float <span class=\"arrow\">&#45;&gt;</span></span> bool</span></code></div><div class=\"spec-doc\"><p>Checks if a flot is not NaN or infinite</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_int\"><a href=\"#val-to_int\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_int : <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div><div class=\"spec-doc\"><p>Rounds a float towards 0</p><p>Returns 0 if NaN, and unchanged if infinite</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_int32\"><a href=\"#val-to_int32\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_int32 : <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div><div class=\"spec-doc\"><p>Same as <a href=\"#val-to_int\"><code>to_int</code></a>, but overflows as if it's a signed 32-bit int</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_uint32\"><a href=\"#val-to_uint32\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_uint32 : <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div><div class=\"spec-doc\"><p>Same as <a href=\"#val-to_int32\"><code>to_int32</code></a>, but for unsigned 32-bit ints</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_uint16\"><a href=\"#val-to_uint16\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_uint16 : <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div><div class=\"spec-doc\"><p>Same as <a href=\"#val-to_uint32\"><code>to_uint32</code></a>, but for unsigned 16-bit ints</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int64_bitwise_not\"><a href=\"#val-int64_bitwise_not\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int64_bitwise_not : <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Z</span>.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int64_bitwise_and\"><a href=\"#val-int64_bitwise_and\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int64_bitwise_and : <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Z</span>.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int64_bitwise_or\"><a href=\"#val-int64_bitwise_or\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int64_bitwise_or : <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Z</span>.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int64_bitwise_xor\"><a href=\"#val-int64_bitwise_xor\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int64_bitwise_xor : <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Z</span>.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int64_left_shift\"><a href=\"#val-int64_left_shift\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int64_left_shift : <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Z</span>.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int64_right_shift\"><a href=\"#val-int64_right_shift\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int64_right_shift : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-uint64_right_shift\"><a href=\"#val-uint64_right_shift\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> uint64_right_shift : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int32_bitwise_not\"><a href=\"#val-int32_bitwise_not\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int32_bitwise_not : <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int32_bitwise_and\"><a href=\"#val-int32_bitwise_and\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int32_bitwise_and : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int32_bitwise_or\"><a href=\"#val-int32_bitwise_or\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int32_bitwise_or : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int32_bitwise_xor\"><a href=\"#val-int32_bitwise_xor\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int32_bitwise_xor : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int32_left_shift\"><a href=\"#val-int32_left_shift\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int32_left_shift : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-int32_right_shift\"><a href=\"#val-int32_right_shift\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> int32_right_shift : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-uint32_right_shift\"><a href=\"#val-uint32_right_shift\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> uint32_right_shift : <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Z</span>.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-uint32_right_shift_f\"><a href=\"#val-uint32_right_shift_f\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> uint32_right_shift_f : <span>float <span class=\"arrow\">&#45;&gt;</span></span> <span>float <span class=\"arrow\">&#45;&gt;</span></span> float</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-uint64_int_right_shift\"><a href=\"#val-uint64_int_right_shift\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> uint64_int_right_shift : <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"xref-unresolved\">Z</span>.t <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Z</span>.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-string_of_pos_float\"><a href=\"#val-string_of_pos_float\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> string_of_pos_float : <span>float <span class=\"arrow\">&#45;&gt;</span></span> string</span></code></div><div class=\"spec-doc\"><p>Stringifies a float, adapting based on its size, or whether it's an integer</p><p>Assumes the float is normal and positive</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-float_to_string_inner\"><a href=\"#val-float_to_string_inner\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> float_to_string_inner : <span>float <span class=\"arrow\">&#45;&gt;</span></span> string</span></code></div><div class=\"spec-doc\"><p>Stringifies a float, considering negative and abnormal cases</p></div></div>"}