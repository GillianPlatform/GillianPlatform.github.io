{"header":"<h1>Module <code><span>FO_logic.Reduction</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../../index.html","kind":"page"},{"name":"Gillian","href":"../../../index.html","kind":"module"},{"name":"Symbolic","href":"../../index.html","kind":"module"},{"name":"FO_logic","href":"../index.html","kind":"module"},{"name":"Reduction","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"","content":"<div class=\"odoc-spec\"><div class=\"spec exception anchored\" id=\"exception-ReductionException\"><a href=\"#exception-ReductionException\" class=\"anchor\"></a><code><span><span class=\"keyword\">exception</span> </span><span><span class=\"exception\">ReductionException</span> <span class=\"keyword\">of</span> <a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> * string</span></code></div><div class=\"spec-doc\"><p><code>ReductionException (e, msg)</code> denotes an exception raised due to an expression <code>e</code> being malformed with explanation <code>msg</code></p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-resolve_expr_to_location\"><a href=\"#val-resolve_expr_to_location\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> resolve_expr_to_location : \u000A  <span><a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span>string option</span></span></code></div><div class=\"spec-doc\"><p><code>resolve_to_location pfs e</code> attempts to resolve the expression denoted by <code>e</code> to a location given the pure formulae <code>pfs</code>. If successful, it returns that location, together with any bindings learned during the resolution.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-get_equal_expressions\"><a href=\"#val-get_equal_expressions\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> get_equal_expressions : \u000A  <span><a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> list</span></span></code></div><div class=\"spec-doc\"><p><code>get_equal_expressions pfs e</code> returns a list of expressions that equal <code>e</code> under the pure formulae <code>pfs</code>.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-understand_lstcat\"><a href=\"#val-understand_lstcat\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> understand_lstcat : \u000A  <span><a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> list</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span>(<a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> * <a href=\"../../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a>)</span> option</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-reduce_lexpr\"><a href=\"#val-reduce_lexpr\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> reduce_lexpr : \u000A  <span><span class=\"optlabel\">?matching</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?reduce_lvars</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a></span></code></div><div class=\"spec-doc\"><p><code>reduce_lexpr ?matching ?reduce_lvars ?pfs ?gamma e</code> reduces the expression <code>e</code> given (optional) pure formulae <code>pfs</code> and typing environment <code>gamma</code>. The <code>reduce_lvars</code> and <code>matching</code> flags should not be used by Gillian instantiation developers.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-reduce_assertion\"><a href=\"#val-reduce_assertion\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> reduce_assertion : \u000A  <span><span class=\"optlabel\">?matching</span>:bool <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Asrt/index.html#type-t\">Gil_syntax.Asrt.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <a href=\"../../../Gil_syntax/Asrt/index.html#type-t\">Gil_syntax.Asrt.t</a></span></code></div><div class=\"spec-doc\"><p><code>reduce_assertion ?matching ?pfs ?gamma a</code> reduces the assertion <code>a</code> given (optional) pure formulae <code>pfs</code> and typing environment <code>gamma</code>. The <code>matching</code> flag should not be used by Gillian instantiation developers.</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-is_tautology\"><a href=\"#val-is_tautology\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> is_tautology : \u000A  <span><span class=\"optlabel\">?pfs</span>:<a href=\"../../Pure_context/index.html#type-t\">Pure_context.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"optlabel\">?gamma</span>:<a href=\"../../Type_env/index.html#type-t\">Type_env.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><a href=\"../../../Gil_syntax/Expr/index.html#type-t\">Gil_syntax.Expr.t</a> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  bool</span></code></div></div>"}