{"header":"<h1>Module <code><span>Gil_syntax.Cmd</span></code></h1>","type":"documentation","uses_katex":false,"breadcrumbs":[{"name":"Index","href":"../../../../index.html","kind":"leaf-page"},{"name":"gillian","href":"../../../index.html","kind":"page"},{"name":"Gillian","href":"../../index.html","kind":"module"},{"name":"Gil_syntax","href":"../index.html","kind":"module"},{"name":"Cmd","href":"#","kind":"module"}],"toc":[],"source_anchor":null,"preamble":"<p>GIL Commands</p>","content":"<div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-logic_bindings_t\"><a href=\"#type-logic_bindings_t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> logic_bindings_t</span><span> = string * <span><span>(string * <a href=\"../Expr/index.html#type-t\">Expr.t</a>)</span> list</span></span></code></div><div class=\"spec-doc\"><p>Optional bindings for procedure calls</p></div></div><div class=\"odoc-spec\"><div class=\"spec type anchored\" id=\"type-t\"><a href=\"#type-t\" class=\"anchor\"></a><code><span><span class=\"keyword\">type</span> <span>'label t</span></span><span> = </span></code><ol><li id=\"type-t.Skip\" class=\"def variant constructor anchored\"><a href=\"#type-t.Skip\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Skip</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Skip</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.Assignment\" class=\"def variant constructor anchored\"><a href=\"#type-t.Assignment\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Assignment</span> <span class=\"keyword\">of</span> string * <a href=\"../Expr/index.html#type-t\">Expr.t</a></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Variable Assignment</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.LAction\" class=\"def variant constructor anchored\"><a href=\"#type-t.LAction\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">LAction</span> <span class=\"keyword\">of</span> string * string * <span><a href=\"../Expr/index.html#type-t\">Expr.t</a> list</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Action</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.Logic\" class=\"def variant constructor anchored\"><a href=\"#type-t.Logic\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Logic</span> <span class=\"keyword\">of</span> <a href=\"../LCmd/index.html#type-t\">LCmd.t</a></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Logic commands</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.Goto\" class=\"def variant constructor anchored\"><a href=\"#type-t.Goto\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Goto</span> <span class=\"keyword\">of</span> <span class=\"type-var\">'label</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Unconditional goto</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.GuardedGoto\" class=\"def variant constructor anchored\"><a href=\"#type-t.GuardedGoto\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">GuardedGoto</span> <span class=\"keyword\">of</span> <a href=\"../Expr/index.html#type-t\">Expr.t</a> * <span class=\"type-var\">'label</span> * <span class=\"type-var\">'label</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Conditional goto</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.Call\" class=\"def variant constructor anchored\"><a href=\"#type-t.Call\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Call</span> <span class=\"keyword\">of</span> string * <a href=\"../Expr/index.html#type-t\">Expr.t</a> * <span><a href=\"../Expr/index.html#type-t\">Expr.t</a> list</span> * <span><span class=\"type-var\">'label</span> option</span> * <span><a href=\"#type-logic_bindings_t\">logic_bindings_t</a> option</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Procedure call</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.ECall\" class=\"def variant constructor anchored\"><a href=\"#type-t.ECall\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">ECall</span> <span class=\"keyword\">of</span> string * <a href=\"../Expr/index.html#type-t\">Expr.t</a> * <span><a href=\"../Expr/index.html#type-t\">Expr.t</a> list</span> * <span><span class=\"type-var\">'label</span> option</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>External Procedure call</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.Apply\" class=\"def variant constructor anchored\"><a href=\"#type-t.Apply\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Apply</span> <span class=\"keyword\">of</span> string * <a href=\"../Expr/index.html#type-t\">Expr.t</a> * <span><span class=\"type-var\">'label</span> option</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Application-style procedure call</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.Arguments\" class=\"def variant constructor anchored\"><a href=\"#type-t.Arguments\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Arguments</span> <span class=\"keyword\">of</span> string</span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Arguments of the currently executing function</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.PhiAssignment\" class=\"def variant constructor anchored\"><a href=\"#type-t.PhiAssignment\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">PhiAssignment</span> <span class=\"keyword\">of</span> <span><span>(string * <span><a href=\"../Expr/index.html#type-t\">Expr.t</a> list</span>)</span> list</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>PHI-assignment</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.ReturnNormal\" class=\"def variant constructor anchored\"><a href=\"#type-t.ReturnNormal\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">ReturnNormal</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Normal return</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.ReturnError\" class=\"def variant constructor anchored\"><a href=\"#type-t.ReturnError\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">ReturnError</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Error return</p><span class=\"comment-delim\">*)</span></div></li><li id=\"type-t.Fail\" class=\"def variant constructor anchored\"><a href=\"#type-t.Fail\" class=\"anchor\"></a><code><span>| </span><span><span class=\"constructor\">Fail</span> <span class=\"keyword\">of</span> string * <span><a href=\"../Expr/index.html#type-t\">Expr.t</a> list</span></span></code><div class=\"def-doc\"><span class=\"comment-delim\">(*</span><p>Failure</p><span class=\"comment-delim\">*)</span></div></li></ol></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-to_yojson\"><a href=\"#val-to_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> to_yojson : <span><span>(<span><span class=\"type-var\">'label</span> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Yojson</span>.Safe.t)</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span class=\"type-var\">'label</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Yojson</span>.Safe.t</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-of_yojson\"><a href=\"#val-of_yojson\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> of_yojson : \u000A  <span><span>(<span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'label</span> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span>)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span class=\"xref-unresolved\">Yojson</span>.Safe.t <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'label</span> <a href=\"#type-t\">t</a></span> <span class=\"xref-unresolved\">Ppx_deriving_yojson_runtime</span>.error_or</span></span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-equal\"><a href=\"#val-equal\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> equal : \u000A  <span><span>(<span><span class=\"type-var\">'label</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"type-var\">'label</span> <span class=\"arrow\">&#45;&gt;</span></span> <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.bool)</span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'label</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span><span><span class=\"type-var\">'label</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span>\u000A  <span class=\"xref-unresolved\">Ppx_deriving_runtime</span>.bool</span></code></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp\"><a href=\"#val-pp\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp : <span><span class=\"label\">pp_label</span>:<span><span class=\"type-var\">'a</span> <span class=\"xref-unresolved\">Fmt</span>.t</span> <span class=\"arrow\">&#45;&gt;</span></span> <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><span><span class=\"type-var\">'a</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div><div class=\"spec-doc\"><p>Pretty-printer</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp_labeled\"><a href=\"#val-pp_labeled\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp_labeled : <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><span>string <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div><div class=\"spec-doc\"><p>Pretty-printer for labelled programs</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pp_indexed\"><a href=\"#val-pp_indexed\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pp_indexed : <span><span class=\"xref-unresolved\">Stdlib</span>.Format.formatter <span class=\"arrow\">&#45;&gt;</span></span> <span><span>int <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> unit</span></code></div><div class=\"spec-doc\"><p>Pretty-printer for integer-indexed programs</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-successors\"><a href=\"#val-successors\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> successors : <span><span>int <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <span>int <span class=\"arrow\">&#45;&gt;</span></span> <span>int list</span></span></code></div><div class=\"spec-doc\"><p>Possible successors of an command (in integer indexing)</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-pvars\"><a href=\"#val-pvars\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> pvars : <span><span><span class=\"type-var\">'a</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a></span></code></div><div class=\"spec-doc\"><p>Program variable collector</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-lvars\"><a href=\"#val-lvars\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> lvars : <span><span><span class=\"type-var\">'a</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a></span></code></div><div class=\"spec-doc\"><p>Logical variable collector</p></div></div><div class=\"odoc-spec\"><div class=\"spec value anchored\" id=\"val-locs\"><a href=\"#val-locs\" class=\"anchor\"></a><code><span><span class=\"keyword\">val</span> locs : <span><span><span class=\"type-var\">'a</span> <a href=\"#type-t\">t</a></span> <span class=\"arrow\">&#45;&gt;</span></span> <a href=\"../../Utils/Containers/SS/index.html#type-t\">Utils.Containers.SS.t</a></span></code></div><div class=\"spec-doc\"><p>Location collector</p></div></div>"}